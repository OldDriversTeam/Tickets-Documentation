-- MySQL Script generated by MySQL Workbench
-- Thu May 25 19:26:45 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ticketsdb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ticketsdb` ;

-- -----------------------------------------------------
-- Schema ticketsdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ticketsdb` DEFAULT CHARACTER SET utf8 ;
USE `ticketsdb` ;

-- -----------------------------------------------------
-- Table `ticketsdb`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`user` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`user` (
  `user_id` VARCHAR(100) NOT NULL,
  `user_name` VARCHAR(100) NOT NULL,
  `user_password` VARCHAR(100) NOT NULL,
  `user_phone` VARCHAR(100) NOT NULL,
  `user_gender` VARCHAR(10) NULL,
  `user_age` INT NULL,
  `user_email` VARCHAR(30) NULL,
  `user_avatar` VARCHAR(9999) NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `user_phone_UNIQUE` (`user_phone` ASC))
ENGINE = InnoDB;

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES ('123','hshhuan','123456','13660069700','male',18,'some@email.com',''),('124','abc','123456','11111111111','female',20,NULL,NULL);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

-- -----------------------------------------------------
-- Table `ticketsdb`.`city`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`city` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`city` (
  `city_id` VARCHAR(100) NOT NULL,
  `city_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`city_id`))
ENGINE = InnoDB;

LOCK TABLES `city` WRITE;
/*!40000 ALTER TABLE `city` DISABLE KEYS */;
INSERT INTO `city` VALUES ('440100','广州');
/*!40000 ALTER TABLE `city` ENABLE KEYS */;
UNLOCK TABLES;


-- -----------------------------------------------------
-- Table `ticketsdb`.`cinema`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`cinema` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`cinema` (
  `cinema_id` VARCHAR(100) NOT NULL,
  `cinema_name` VARCHAR(100) NOT NULL,
  `cinema_address` VARCHAR(100) NULL,
  `cinema_phone` VARCHAR(100) NULL,
  `city_id` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`cinema_id`),
  INDEX `fk_cinema_city1_idx` (`city_id` ASC),
  CONSTRAINT `fk_cinema_city1`
    FOREIGN KEY (`city_id`)
    REFERENCES `ticketsdb`.`city` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

LOCK TABLES `cinema` WRITE;
/*!40000 ALTER TABLE `cinema` DISABLE KEYS */;
INSERT INTO `cinema` VALUES ('c1','金逸珠江国际影城广州大学城店','番禺区小谷接到贝岗村中二横路1号GOGO新天地二期二楼','020-39340185','440100'),('c2','中华广场电影城','越秀区中山三路33号中华广场9楼','020-83739423','440100'),('c3','广州科学中心巨幕影院','番禺区广州大学城西六路168号','020-39348080','440100');
/*!40000 ALTER TABLE `cinema` ENABLE KEYS */;
UNLOCK TABLES;


-- -----------------------------------------------------
-- Table `ticketsdb`.`room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`room` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`room` (
  `room_id` VARCHAR(100) NOT NULL,
  `room_name` VARCHAR(100) NOT NULL,
  `room_type` VARCHAR(100) NULL,
  `room_col` INT NOT NULL,
  `room_row` INT NOT NULL,
  `cinema_id` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`room_id`),
  INDEX `fk_room_cinema1_idx` (`cinema_id` ASC),
  CONSTRAINT `fk_room_cinema1`
    FOREIGN KEY (`cinema_id`)
    REFERENCES `ticketsdb`.`cinema` (`cinema_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

LOCK TABLES `room` WRITE;
/*!40000 ALTER TABLE `room` DISABLE KEYS */;
INSERT INTO `room` VALUES ('r1','一号厅','3D',20,50,'c1'),('r2','二号厅','3D',15,30,'c1');
/*!40000 ALTER TABLE `room` ENABLE KEYS */;
UNLOCK TABLES;


-- -----------------------------------------------------
-- Table `ticketsdb`.`movieType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`movieType` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`movieType` (
  `movie_type_id` VARCHAR(100) NOT NULL,
  `movie_type_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`movie_type_id`))
ENGINE = InnoDB;

LOCK TABLES `movietype` WRITE;
/*!40000 ALTER TABLE `movietype` DISABLE KEYS */;
INSERT INTO `movietype` VALUES ('mt1','动作/冒险/喜剧'),('mt2','剧情/传记/运动'),('mt3','科幻/惊悚/恐怖');
/*!40000 ALTER TABLE `movietype` ENABLE KEYS */;
UNLOCK TABLES;

-- -----------------------------------------------------
-- Table `ticketsdb`.`movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`movie` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`movie` (
  `movie_id` VARCHAR(100) NOT NULL,
  `movie_name` VARCHAR(100) NOT NULL,
  `movie_releaseDate` VARCHAR(100) NULL,
  `movie_storyline` VARCHAR(1000) NULL,
  `movie_detail` VARCHAR(999) NULL,
  `movie_poster` VARCHAR(9999) NULL,
  `movie_avgScore` FLOAT NULL,
  `movie_isShow` TINYINT(1) NULL,
  `movie_type_id` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`movie_id`),
  INDEX `fk_movie_movieType1_idx` (`movie_type_id` ASC),
  CONSTRAINT `fk_movie_movieType1`
    FOREIGN KEY (`movie_type_id`)
    REFERENCES `ticketsdb`.`movieType` (`movie_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

LOCK TABLES `movie` WRITE;
/*!40000 ALTER TABLE `movie` DISABLE KEYS */;
INSERT INTO `movie` VALUES ('m1','2017-05-26','杰克船长（约翰尼·德普饰）发现令人闻风丧胆的萨拉查船长 （哈维尔·巴登饰）竟率领着一众夺命亡灵水手逃出了百慕大三角区。他们扬言要杀尽世上所有的海盗，头号目标就是杰克船长。要想改写命运，杰克船长唯一的希望就是找到传说中海神波塞冬的三叉戟，拥有它就能拥有统治整个海洋的力量。为了寻获这件神器，杰克船长被迫和聪明美丽的天文学家卡琳娜·史密斯（卡雅·斯考达里奥饰）以及固执的年轻皇家海军亨利（布兰顿·思怀兹饰）联手出击。航行着他那破破烂烂的“黑珍珠”号，杰克船长不但决心要改变自己的厄运，同时也力求能从史上最狠毒可怕的敌人那里捡回一条命','中文名 加勒比海盗5：死无对证  外文名 Pirates of the Caribbean: Dead Men Tell No Tales/Salazar\'s Revenge  其它译名 死无对证、亡灵的缄默、亡者无言、死人不会告密、萨拉查的复仇  出品时间 2017年 出品公司 迪士尼影片公司、杰瑞·布鲁克海默电影公司 发行公司 迪士尼影片公司 制片地区 美国 制片成本 3亿美元（估） 拍摄地点 昆士兰、澳大利亚 拍摄日期 2015年 导    演乔阿吉姆·罗恩尼、艾斯彭·山德伯格 编    剧斯图尔特·比蒂、泰德·埃里奥特、杰夫·内桑森、特里·鲁西奥 制片人杰瑞·布鲁克海默 类    型 动作、奇幻、冒险、探险 主    演约翰尼·德普，奥兰多·布鲁姆，杰弗里·拉什，哈维尔·巴登，布兰顿·思怀兹，卡雅·斯考达里奥，凯文·麦克纳利 片    长 129分钟 上映时间 2017年5月26日(中国大陆/美国)  分    级 PG-13  对白语言 英语 色    彩 彩色 imdb编码 tt1790809','https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1496684387070&di=ce008c481a8cae4c5b3b953e80da9a9d&imgtype=0&src=http%3A%2F%2Fnpic7.edushi.com%2Fcn%2Fzixun%2Fzh-chs%2F2017-04%2F26%2Fe17ff2d2b84d44a296c17ab3a4dcfa12.jpg',9.5,1,'mt1','加勒比海盗5:死无对证'),('m2','2017-05-05','马哈维亚·辛格·珀尕是印度国家摔跤冠军，却因生活所迫放弃摔跤。他希望儿子可以帮他完成梦想——为印度赢得世界级金牌。不料命运捉弄让他生了四个女儿，偶然的机会他开始教女儿摔跤，努力使女儿变成世界级的摔跤手，期间趣事多多，但也由此引发了一连串有关舆论、宗教等社会话题的事件，尽管有极大的困难，最终大女儿们进入英联邦摔跤比赛并夺得冠军','中文名 摔跤吧！爸爸 外文名 Dangal 出品时间 2016年 出品公司 Aamir Khan Productions Ltd. 发行公司 UTV Motion Pictures 制片地区 印度 拍摄地点 印度 导    演尼特什·提瓦瑞 编    剧 比于什·古普塔、施热亚·简、尼特什·提瓦瑞 类    型 剧情、喜剧、传记、运动 主    演阿米尔·汗，萨卡诗·泰瓦，桑亚·玛荷塔，法缇玛·萨那·纱卡 片    长 169分钟 上映时间 2016年12月23日（印度）2017年5月5日（中国） 对白语言 北印度语 色    彩 彩色 主要奖项 第62届印度电影观众奖','https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1497279158&di=93d4efa01607f31480842dc2b230966c&imgtype=jpg&er=1&src=http%3A%2F%2Fcnews.chinadaily.com.cn%2Fimg%2Fattachement%2Fjpg%2Fsite1%2F20170110%2Fa41f726b573a19dee99d2e.jpg',9.7,1,'mt2','摔跤吧!爸爸'),('m3','2017-05-19','人类发现了一个火星上的生命体，宇航员们试图在空间站唤醒这个活体细胞并研究它，希望确保安全后把它带到地球。然而唤醒这个神秘外星生命后，未知的巨大灾难也随之而来。太空和急诊医学专家方凯文博士以及基因学专家亚当·卢瑟福博士，一切从发现外星生命开始。这个来自火星的幸存生命细胞既是肌肉又是大脑，它可能是有史以来最厉害的外星怪物，而唤醒它不仅威胁着空间站里每个宇航员的生命','中文名 异星觉醒 外文名 Life 其它译名 生命 发行公司 哥伦比亚电影公司[1]  制片地区 美国 导    演丹尼尔·伊斯皮诺萨 编    剧略特·里斯、保罗·韦尼克 类    型 科幻、灾难片 主    演杰克·吉伦哈尔，丽贝卡·弗格森，瑞安·雷诺兹，真田广之 上映时间 2017年3月24日（美国）[1]  对白语言 英语 色    彩 彩色 imdb编码 tt5442430','https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1496684471010&di=f7798e23f41a9f52d62fc52945f321bc&imgtype=0&src=http%3A%2F%2Fimages.china.cn%2Fattachement%2Fpng%2Fsite1007%2F20170228%2Fb8aeed9904561a1f31ea0b.png',7.8,1,'mt3','异星觉醒');
/*!40000 ALTER TABLE `movie` ENABLE KEYS */;
UNLOCK TABLES;

-- -----------------------------------------------------
-- Table `ticketsdb`.`showing`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`showing` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`showing` (
  `showing_id` VARCHAR(100) NOT NULL,
  `showing_date` VARCHAR(100) NOT NULL,
  `showing_time` VARCHAR(100) NOT NULL,
  `showing_price` FLOAT NOT NULL,
  `room_id` VARCHAR(100) NOT NULL,
  `movie_id` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`showing_id`),
  INDEX `fk_show_room1_idx` (`room_id` ASC),
  INDEX `fk_show_movie1_idx` (`movie_id` ASC),
  CONSTRAINT `fk_show_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `ticketsdb`.`room` (`room_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_show_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `ticketsdb`.`movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

LOCK TABLES `showing` WRITE;
/*!40000 ALTER TABLE `showing` DISABLE KEYS */;
INSERT INTO `showing` VALUES ('s1','2017-05-26','10-30-00',40,'r1','m1'),('s2','2017-05-27','20-30-00',35,'r2','m2'),('s3','2017-06-07','10-00-00',60,'r1','m1'),('s4','2017-05-26','17-00-00',10,'r3','m1');
/*!40000 ALTER TABLE `showing` ENABLE KEYS */;
UNLOCK TABLES;


-- -----------------------------------------------------
-- Table `ticketsdb`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`ticket` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`ticket` (
  `ticket_id` VARCHAR(100) NOT NULL,
  `ticket_seatColNum` INT NOT NULL,
  `ticket_seatRowNum` INT NULL,
  `ticket_isSold` TINYINT(1) NOT NULL,
  `showing_id` VARCHAR(100) NOT NULL,
  `user_id` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`ticket_id`),
  INDEX `fk_ticket_show1_idx` (`showing_id` ASC),
  INDEX `fk_ticket_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_ticket_show1`
    FOREIGN KEY (`showing_id`)
    REFERENCES `ticketsdb`.`showing` (`showing_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ticketsdb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

LOCK TABLES `ticket` WRITE;
/*!40000 ALTER TABLE `ticket` DISABLE KEYS */;
INSERT INTO `ticket` VALUES ('s1r1t55',5,5,1,'s1','123'),('s1r1t56',5,6,1,'s1','123'),('s2r2t78',7,8,1,'s2','124');
/*!40000 ALTER TABLE `ticket` ENABLE KEYS */;
UNLOCK TABLES;

-- -----------------------------------------------------
-- Table `ticketsdb`.`review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`review` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`review` (
  `review_id` VARCHAR(100) NOT NULL,
  `review_content` VARCHAR(9999) NULL,
  `review_score` FLOAT NULL,
  `review_title` VARCHAR(100) NULL,
  `review_date` VARCHAR(100) NULL,
  `user_id` VARCHAR(100) NOT NULL,
  `showing_id` VARCHAR(100) NOT NULL,
  `movie_id` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`review_id`),
  INDEX `fk_review_user1_idx` (`user_id` ASC),
  INDEX `fk_review_show1_idx` (`showing_id` ASC),
  INDEX `fk_review_movie1_idx` (`movie_id` ASC),
  CONSTRAINT `fk_review_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ticketsdb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_show1`
    FOREIGN KEY (`showing_id`)
    REFERENCES `ticketsdb`.`showing` (`showing_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `ticketsdb`.`movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticketsdb`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticketsdb`.`comment` ;

CREATE TABLE IF NOT EXISTS `ticketsdb`.`comment` (
  `comment_id` VARCHAR(100) NOT NULL,
  `comment_title` VARCHAR(100) NULL,
  `comment_content` VARCHAR(1000) NULL,
  `comment_date` VARCHAR(100) NULL,
  `cinema_id` VARCHAR(100) NOT NULL,
  `user_id` VARCHAR(100) NOT NULL,
  `showing_id` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`comment_id`),
  INDEX `fk_comment_cinema1_idx` (`cinema_id` ASC),
  INDEX `fk_comment_user1_idx` (`user_id` ASC),
  INDEX `fk_comment_show1_idx` (`showing_id` ASC),
  CONSTRAINT `fk_comment_cinema1`
    FOREIGN KEY (`cinema_id`)
    REFERENCES `ticketsdb`.`cinema` (`cinema_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ticketsdb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_show1`
    FOREIGN KEY (`showing_id`)
    REFERENCES `ticketsdb`.`showing` (`showing_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
